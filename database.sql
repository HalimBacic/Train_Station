-- MySQL Script generated by MySQL Workbench
-- Sri 28 Jul 2021 17:57:11
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema czsmdp
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `czsmdp` ;

-- -----------------------------------------------------
-- Schema czsmdp
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `czsmdp` ;
USE `czsmdp` ;

-- -----------------------------------------------------
-- Table `czsmdp`.`stanica`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `czsmdp`.`stanica` ;

CREATE TABLE IF NOT EXISTS `czsmdp`.`stanica` (
  `ime` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ime`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `czsmdp`.`korisnik`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `czsmdp`.`korisnik` ;

CREATE TABLE IF NOT EXISTS `czsmdp`.`korisnik` (
  `username` VARCHAR(45) NOT NULL,
  `lozinka` VARCHAR(512) NULL,
  `tip` VARCHAR(45) NULL,
  `stanica_ime` VARCHAR(45) NOT NULL,
  `lineStatus` TINYINT NULL DEFAULT 0,
  PRIMARY KEY (`username`, `stanica_ime`),
  UNIQUE INDEX `lozinka_UNIQUE` (`lozinka` ASC) VISIBLE,
  INDEX `fk_korisnik_stanica_idx` (`stanica_ime` ASC) VISIBLE,
  CONSTRAINT `fk_korisnik_stanica`
    FOREIGN KEY (`stanica_ime`)
    REFERENCES `czsmdp`.`stanica` (`ime`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `czsmdp`.`linija`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `czsmdp`.`linija` ;

CREATE TABLE IF NOT EXISTS `czsmdp`.`linija` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `stanica_start` VARCHAR(45) NOT NULL,
  `stanica_stop` VARCHAR(45) NOT NULL,
  INDEX `fk_stanica_has_stanica_stanica2_idx` (`stanica_stop` ASC) VISIBLE,
  INDEX `fk_stanica_has_stanica_stanica1_idx` (`stanica_start` ASC) VISIBLE,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_stanica_has_stanica_stanica1`
    FOREIGN KEY (`stanica_start`)
    REFERENCES `czsmdp`.`stanica` (`ime`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_stanica_has_stanica_stanica2`
    FOREIGN KEY (`stanica_stop`)
    REFERENCES `czsmdp`.`stanica` (`ime`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `czsmdp`.`stanka`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `czsmdp`.`stanka` ;

CREATE TABLE IF NOT EXISTS `czsmdp`.`stanka` (
  `stanica_stanka` VARCHAR(45) NOT NULL,
  `vrijeme` TIME NOT NULL,
  `status` TINYINT NULL DEFAULT 0,
  `linija_id` INT NOT NULL,
  CONSTRAINT `fk_stanka_linija1`
    FOREIGN KEY (`linija_id`)
    REFERENCES `czsmdp`.`linija` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `czsmdp` ;

-- -----------------------------------------------------
-- procedure dodajStanicu
-- -----------------------------------------------------

USE `czsmdp`;
DROP procedure IF EXISTS `czsmdp`.`dodajStanicu`;

DELIMITER $$
USE `czsmdp`$$
CREATE PROCEDURE `dodajStanicu` (IN i VARCHAR(45))
BEGIN
	insert into `stanica`(`ime`)
    values (i);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure dodajKorisnika
-- -----------------------------------------------------

USE `czsmdp`;
DROP procedure IF EXISTS `czsmdp`.`dodajKorisnika`;

DELIMITER $$
USE `czsmdp`$$
CREATE PROCEDURE `dodajKorisnika` (IN usr VARCHAR(45),IN pass VARCHAR(512),IN t VARCHAR(45),IN si VARCHAR(45))
BEGIN
		insert into `korisnik`(`username`,`lozinka`,`tip`,`stanica_ime`)
        values(usr,pass,t,si);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure brisiKorisnika
-- -----------------------------------------------------

USE `czsmdp`;
DROP procedure IF EXISTS `czsmdp`.`brisiKorisnika`;

DELIMITER $$
USE `czsmdp`$$
CREATE PROCEDURE `brisiKorisnika` (IN usrnm VARCHAR(45))
BEGIN
		delete from `korisnik` where `username` = usrnm;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure brisiStanicu
-- -----------------------------------------------------

USE `czsmdp`;
DROP procedure IF EXISTS `czsmdp`.`brisiStanicu`;

DELIMITER $$
USE `czsmdp`$$
CREATE PROCEDURE `brisiStanicu` (IN i VARCHAR(45))
BEGIN
	delete from `linija_ima_stanicu` where `stanica_ime` = i;
	delete from `stanica` where ime = i;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure findKorisnik
-- -----------------------------------------------------

USE `czsmdp`;
DROP procedure IF EXISTS `czsmdp`.`findKorisnik`;

DELIMITER $$
USE `czsmdp`$$
CREATE PROCEDURE `findKorisnik` (IN usrnm VARCHAR(45))
BEGIN
		select * from `korisnik` where username = usrnm;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure findStanica
-- -----------------------------------------------------

USE `czsmdp`;
DROP procedure IF EXISTS `czsmdp`.`findStanica`;

DELIMITER $$
USE `czsmdp`$$
CREATE PROCEDURE `findStanica` (IN i VARCHAR(45))
BEGIN
		select * from `stanica` where ime = i;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure dodajLiniju
-- -----------------------------------------------------

USE `czsmdp`;
DROP procedure IF EXISTS `czsmdp`.`dodajLiniju`;

DELIMITER $$
USE `czsmdp`$$
CREATE PROCEDURE `dodajLiniju` (IN st VARCHAR(45),IN sp VARCHAR(45))
BEGIN
		insert into `linija`(`stanica_start`,`stanica_stop`)
        values (st,sp);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure findLinija
-- -----------------------------------------------------

USE `czsmdp`;
DROP procedure IF EXISTS `czsmdp`.`findLinija`;

DELIMITER $$
USE `czsmdp`$$
CREATE PROCEDURE `findLinija` (IN s1 VARCHAR(45), IN s2 VARCHAR(45))
BEGIN
	select * from `linija` where stanica_start = s1 && stanica_stop = s2;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure brisiLiniju
-- -----------------------------------------------------

USE `czsmdp`;
DROP procedure IF EXISTS `czsmdp`.`brisiLiniju`;

DELIMITER $$
USE `czsmdp`$$
CREATE PROCEDURE `brisiLiniju` (IN i INT)
BEGIN
	call brisiStanku(i);
	delete from `linija` where id = i;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure dodajStanke
-- -----------------------------------------------------

USE `czsmdp`;
DROP procedure IF EXISTS `czsmdp`.`dodajStanke`;

DELIMITER $$
USE `czsmdp`$$
CREATE PROCEDURE `dodajStanke` (IN stn VARCHAR(45),IN tm TIME)
BEGIN
	set @idd = (select count(*) from linija);
	insert into `stanka`(`stanica_stanka`,`vrijeme`,`linija_id`)
    values (stn,tm,@idd);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure brisiStanku
-- -----------------------------------------------------

USE `czsmdp`;
DROP procedure IF EXISTS `czsmdp`.`brisiStanku`;

DELIMITER $$
USE `czsmdp`$$
CREATE PROCEDURE `brisiStanku` (IN idd INT)
BEGIN
		delete from `stanka` where linija_id = idd;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure promjeniStatus
-- -----------------------------------------------------

USE `czsmdp`;
DROP procedure IF EXISTS `czsmdp`.`promjeniStatus`;

DELIMITER $$
USE `czsmdp`$$
CREATE PROCEDURE `promjeniStatus` (IN lid INT,IN ss VARCHAR(45),IN s TINYINT)
BEGIN
		update stanka
        set status = s
        where stanica_stanka = ss && linija_id = lid;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure promjeniStatusKorisnika
-- -----------------------------------------------------

USE `czsmdp`;
DROP procedure IF EXISTS `czsmdp`.`promjeniStatusKorisnika`;

DELIMITER $$
USE `czsmdp`$$
CREATE PROCEDURE `promjeniStatusKorisnika` (IN st TINYINT, IN usrnm VARCHAR(45))
BEGIN
		update korisnik
        set lineStatus = st
        where username = usrnm;
END$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
